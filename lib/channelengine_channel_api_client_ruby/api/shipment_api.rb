=begin
#ChannelEngine Channel API

#ChannelEngine API for channels

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8-SNAPSHOT

=end

require 'uri'

module ChannelEngineChannelApiClient
  class ShipmentApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Shipments
    # Gets all shipments created since the supplied date.
    # @param [Hash] opts the optional parameters
    # @option opts [DateTime] :created_since Deprecated, please use FromDate instead.
    # @option opts [Array<String>] :statuses Shipment status(es) to filter on
    # @option opts [DateTime] :from_date Filter on the creation date, starting from this date. This date is inclusive.
    # @option opts [DateTime] :to_date Filter on the creation date, until this date. This date is exclusive.
    # @option opts [Array<String>] :channel_order_nos Filter on the unique references (ids) as used by the channel.
    # @option opts [Integer] :page The page to filter on. Starts at 1.
    # @return [CollectionOfChannelShipmentResponse]
    def shipment_index(opts = {})
      data, _status_code, _headers = shipment_index_with_http_info(opts)
      data
    end

    # Get Shipments
    # Gets all shipments created since the supplied date.
    # @param [Hash] opts the optional parameters
    # @option opts [DateTime] :created_since Deprecated, please use FromDate instead.
    # @option opts [Array<String>] :statuses Shipment status(es) to filter on
    # @option opts [DateTime] :from_date Filter on the creation date, starting from this date. This date is inclusive.
    # @option opts [DateTime] :to_date Filter on the creation date, until this date. This date is exclusive.
    # @option opts [Array<String>] :channel_order_nos Filter on the unique references (ids) as used by the channel.
    # @option opts [Integer] :page The page to filter on. Starts at 1.
    # @return [Array<(CollectionOfChannelShipmentResponse, Fixnum, Hash)>] CollectionOfChannelShipmentResponse data, response status code and response headers
    def shipment_index_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentApi.shipment_index ...'
      end
      if @api_client.config.client_side_validation && opts[:'statuses'] && !opts[:'statuses'].all? { |item| ['PENDING', 'CLOSED'].include?(item) }
        fail ArgumentError, 'invalid value for "statuses", must include one of PENDING, CLOSED'
      end
      # resource path
      local_var_path = '/v2/shipments'

      # query parameters
      query_params = {}
      query_params[:'createdSince'] = opts[:'created_since'] if !opts[:'created_since'].nil?
      query_params[:'statuses'] = @api_client.build_collection_param(opts[:'statuses'], :multi) if !opts[:'statuses'].nil?
      query_params[:'fromDate'] = opts[:'from_date'] if !opts[:'from_date'].nil?
      query_params[:'toDate'] = opts[:'to_date'] if !opts[:'to_date'].nil?
      query_params[:'channelOrderNos'] = @api_client.build_collection_param(opts[:'channel_order_nos'], :multi) if !opts[:'channel_order_nos'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain', 'application/json', 'text/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apikey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CollectionOfChannelShipmentResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentApi#shipment_index\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
